package main

import "testing"

func TestNFlips(t *testing.T) {
	var tests = []struct {
		s       string
		correct int
	}{
		{"-", 1},
		{"+", 0},
		{"--", 1},
		{"-+", 1},
		{"+-", 2},
		{"++", 0},
		{"---", 1},
		{"--+", 1},
		{"-+-", 3},
		{"-++", 1},
		{"+--", 2},
		{"+-+", 2},
		{"++-", 2},
		{"+++", 0},
		{"+", 0},
		{"-", 1},
		{"-+", 1},
		{"+-", 2},
		{"+-+", 2},
		{"-+-", 3},
		{"-+-+", 3},
		{"+-+-", 4},
		{"+-+-+", 4},
		{"-+-+-", 5},
		{"-+-+-+", 5},
		{"+-+-+-", 6},
		{"+-+-+-+", 6},
		{"-+-+-+-", 7},
		{"-+-+-+-+", 7},
		{"+-+-+-+-", 8},
		{"+-+-+-+-+", 8},
		{"-+-+-+-+-", 9},
		{"-+-+-+-+-+", 9},
		{"+-+-+-+-+-", 10},
		{"+-+-+-+-+-+", 10},
		{"-+-+-+-+-+-", 11},
		{"-+-+-+-+-+-+", 11},
		{"+-+-+-+-+-+-", 12},
		{"----------------+", 1},
		{"----------------+-", 3},
	}

	for _, tt := range tests {
		res := nFlips(tt.s)
		if res != tt.correct {
			t.Errorf("nFlips(\"%s\") = %d; want %d", tt.s, res, tt.correct)
		}
	}
}

func BenchmarkNFlips(b *testing.B) {
	for i := 0; i < b.N; i++ {
		nFlips("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-")
	}

}

func BenchmarkNFlipsRecursive(b *testing.B) {
	for i := 0; i < b.N; i++ {
		nFlipsRecursive("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-")
	}

}
